package com.gdcontrol.desktop.visao.consulta;

import com.gdcontrol.desktop.controle.consulta.ControleConsultaAplicacao;
import com.gdcontrol.desktop.util.tablemodel.AplicacaoTableModel;
import com.gdcontrol.entidade.Aplicacao;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author gustavo
 */
public class VisaoConsultaAplicacao extends VisaoConsultaPadrao {
    
    private static final String OPCAO_ID = "ID Aplicação";
    private static final String OPCAO_DATA = "Data";
    private static final String OPCAO_DOSAGEM = "Dosagem";
    private static final String OPCAO_LOCAL = "Local Aplicação";
    private static final String OPCAO_MEDICACAO = "Medicação";

    /**
     * Creates new form VisaoConsultaAplicacao
     */
    public VisaoConsultaAplicacao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregaAplicacoes();
        getOpcoesPesquisa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbCampoPesquisa = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        edPesquisa = new javax.swing.JTextField();
        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAplicacoes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Aplicações");

        jLabel1.setText("Campo Pesquisa:");

        jLabel2.setText("Pesquisa:");

        edPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edPesquisaKeyPressed(evt);
            }
        });

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        tbAplicacoes.setModel(tableModelAplicacao);
        jScrollPane1.setViewportView(tbAplicacoes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cbCampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(btPesquisar)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        if(!edPesquisa.getText().isEmpty()){
            tableModelAplicacao.limpar();
            String pesquisa = (String) cbCampoPesquisa.getSelectedItem();
            switch(pesquisa){
                case OPCAO_ID:
                    try{
                        filtraId(Integer.parseInt(edPesquisa.getText()));
                    }catch(NumberFormatException e){}
                    break;
                case OPCAO_DATA:
                    filtraData(edPesquisa.getText());
                    break;
                case OPCAO_DOSAGEM:
                    try{
                        filtraDosagemAplicada(Double.parseDouble(edPesquisa.getText()));
                    }catch(NumberFormatException e){}
                    break;
                case OPCAO_MEDICACAO:
                    filtraNomeComercialMedicacao(edPesquisa.getText());
                    break;
                case OPCAO_LOCAL:
                    filtraDescricaoLocalAplicacao(edPesquisa.getText());
                    break;
            }
            tableModelAplicacao.fireTableDataChanged();
        }else{
            carregaAplicacoes();
        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void edPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edPesquisaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btPesquisarActionPerformed(null);
        }
    }//GEN-LAST:event_edPesquisaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisaoConsultaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisaoConsultaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisaoConsultaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisaoConsultaAplicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VisaoConsultaAplicacao dialog = new VisaoConsultaAplicacao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPesquisar;
    private javax.swing.JComboBox cbCampoPesquisa;
    private javax.swing.JTextField edPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAplicacoes;
    // End of variables declaration//GEN-END:variables

    ControleConsultaAplicacao controle = new ControleConsultaAplicacao();
    AplicacaoTableModel tableModelAplicacao = new AplicacaoTableModel();
    
    @Override
    public void getOpcoesPesquisa() {
        Vector comboBoxItems = new Vector();
        comboBoxItems.add(OPCAO_ID);
        comboBoxItems.add(OPCAO_DOSAGEM);
        comboBoxItems.add(OPCAO_DATA);
        comboBoxItems.add(OPCAO_LOCAL);
        comboBoxItems.add(OPCAO_MEDICACAO);
        final DefaultComboBoxModel model = new DefaultComboBoxModel(comboBoxItems);
        this.cbCampoPesquisa.setModel(model);
    }
    
    private void carregaAplicacoes(){
        for(Aplicacao p : this.controle.listar()){
            tableModelAplicacao.addAplicacao(p);
        }
        tableModelAplicacao.fireTableDataChanged();
    }
    
    private void filtraId(int id){
        Aplicacao aplicacao = getControle().filtraId(id);
        if(aplicacao != null){
            tableModelAplicacao.addAplicacao(aplicacao);
        }
    }
    
    private void filtraDosagemAplicada(double dosagem){
        for (Aplicacao aplicacao : (List<Aplicacao>) getControle().filtraDosagemAplicada(dosagem)) {
            tableModelAplicacao.addAplicacao(aplicacao);
        }
    }
    
    private void filtraData(String dataInicio){
        for (Aplicacao aplicacao : (List<Aplicacao>) getControle().filtraData(dataInicio)) {
            tableModelAplicacao.addAplicacao(aplicacao);
        }
    }
    
    private void filtraDescricaoLocalAplicacao(String nome){
        for (Aplicacao aplicacao : (List<Aplicacao>) getControle().filtraDescricaoLocalAplicacao(nome)) {
            tableModelAplicacao.addAplicacao(aplicacao);
        }
    }
    
    private void filtraNomeComercialMedicacao(String nome){
        for (Aplicacao aplicacao : (List<Aplicacao>) getControle().filtraNomeComercialMedicacao(nome)) {
            tableModelAplicacao.addAplicacao(aplicacao);
        }
    }

    @Override
    public ControleConsultaAplicacao getControle() {
        return this.controle;
    }
}
